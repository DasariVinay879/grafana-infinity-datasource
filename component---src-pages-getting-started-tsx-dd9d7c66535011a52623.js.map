{"version":3,"file":"component---src-pages-getting-started-tsx-dd9d7c66535011a52623.js","mappings":"iNAIe,SAASA,IACtB,OACEC,EAAAA,cAACC,EAAAA,EAAM,CAACC,MAAM,mBACZF,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,kBACbH,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,YAAYC,GAAG,oBAC5BJ,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,kBACbH,EAAAA,cAAAA,KAAAA,CAAIG,UAAU,mBAAmBC,GAAG,cAClCJ,EAAAA,cAAAA,SAAAA,CAAQG,UAAU,mBAAmBE,KAAK,SAAS,iBAAe,WAAW,iBAAe,eAAe,gBAAc,OAAO,gBAAc,eAAc,YAI9JL,EAAAA,cAAAA,MAAAA,CAAKI,GAAG,cAAcD,UAAU,mCAAmC,kBAAgB,aAAa,iBAAe,qBAC7GH,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,kBAAiB,+DAE9B,sBAAIA,UAAU,sBACZH,EAAAA,cAAAA,KAAAA,KAAI,eACW,IACbA,EAAAA,cAAAA,IAAAA,CAAGM,KAAK,uEAAuEC,OAAO,SAASC,IAAI,cAAa,gBAIlHR,EAAAA,cAAAA,KAAAA,KAAI,eACW,IACbA,EAAAA,cAAAA,IAAAA,CAAGM,KAAK,sEAAsEC,OAAO,SAASC,IAAI,cAAa,WAIjHR,EAAAA,cAAAA,KAAAA,KAAI,8BACJA,EAAAA,cAAAA,KAAAA,KAAI,wBACJA,EAAAA,cAAAA,KAAAA,KAAI,wBAENA,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,QAAO,uDACgC,gBAACM,EAAAA,GAAI,CAACC,GAAG,sBAAqB,0BAK1FV,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,kBACbH,EAAAA,cAAAA,KAAAA,CAAIG,UAAU,mBAAmBC,GAAG,cAClCJ,EAAAA,cAAAA,SAAAA,CAAQG,UAAU,6BAA6BE,KAAK,SAAS,iBAAe,WAAW,iBAAe,eAAe,gBAAc,QAAQ,gBAAc,eAAc,cAIzKL,EAAAA,cAAAA,MAAAA,CAAKI,GAAG,cAAcD,UAAU,8BAA8B,kBAAgB,aAAa,iBAAe,qBACxGH,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,kBAAiB,uMAG9B,uBAAKA,UAAU,QAAO,oCACa,gBAACM,EAAAA,GAAI,CAACC,GAAG,uBAAsB,6BAKxEV,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,kBACbH,EAAAA,cAAAA,KAAAA,CAAIG,UAAU,mBAAmBC,GAAG,gBAClCJ,EAAAA,cAAAA,SAAAA,CAAQG,UAAU,6BAA6BE,KAAK,SAAS,iBAAe,WAAW,iBAAe,iBAAiB,gBAAc,QAAQ,gBAAc,iBAAgB,sBAI7KL,EAAAA,cAAAA,MAAAA,CAAKI,GAAG,gBAAgBD,UAAU,8BAA8B,kBAAgB,eAAe,iBAAe,qBAC5GH,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,kBACbH,EAAAA,cAAAA,IAAAA,KAAG,gBACY,yBAAG,WAAW,4CAAyC,gBAACS,EAAAA,GAAI,CAACC,GAAG,cAAa,QAAa,qBAACD,EAAAA,GAAI,CAACC,GAAG,aAAY,OAAY,qBAACD,EAAAA,GAAI,CAACC,GAAG,aAAY,OAAU,IAAE,IACzKV,EAAAA,cAACS,EAAAA,GAAI,CAACC,GAAG,iBAAgB,WAAc,OAAI,gBAACD,EAAAA,GAAI,CAACC,GAAG,cAAa,QAAW,6BAE9EV,EAAAA,cAAAA,IAAAA,KAAG,uBACmB,yBAAG,UAAU,kFAEnCA,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,QAAO,4FAQtC,C","sources":["webpack://gatsby-starter-default/./src/pages/getting-started.tsx"],"sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport { Layout } from './../components/Layout';\n\nexport default function GettingStarted() {\n  return (\n    <Layout title=\"Getting Started\">\n      <div className=\"container py-4\">\n        <div className=\"accordion\" id=\"accordionExample\">\n          <div className=\"accordion-item\">\n            <h2 className=\"accordion-header\" id=\"headingOne\">\n              <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                Install\n              </button>\n            </h2>\n            <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\n              <div className=\"accordion-body\">\n                You can install the plugin with one of the following methods\n                <ul className=\"list-unstyled mt-2\">\n                  <li>\n                    Install from{' '}\n                    <a href=\"https://grafana.com/grafana/plugins/yesoreyeram-infinity-datasource/\" target=\"_blank\" rel=\"noreferrer\">\n                      grafana.com\n                    </a>\n                  </li>\n                  <li>\n                    Install from{' '}\n                    <a href=\"https://github.com/yesoreyeram/grafana-infinity-datasource/releases\" target=\"_blank\" rel=\"noreferrer\">\n                      github\n                    </a>\n                  </li>\n                  <li>Install using grafana-cli </li>\n                  <li>Install using docker</li>\n                  <li>Install using helm </li>\n                </ul>\n                <div className=\"mt-2\">\n                  You can read more about installation process at the <Link to=\"/wiki/installation\">installation page.</Link>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"accordion-item\">\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\n              <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n                Configure\n              </button>\n            </h2>\n            <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\n              <div className=\"accordion-body\">\n                This datasource can work without any additional configuration. If your URL needs authenticated, or if you need to pass any additional headers or query strings, configure the\n                corresponding section.\n                <div className=\"mt-2\">\n                  More details can be found in the <Link to=\"/wiki/configuration\">configuration section</Link>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"accordion-item\">\n            <h2 className=\"accordion-header\" id=\"headingThree\">\n              <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n                Query &amp; Visualize\n              </button>\n            </h2>\n            <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\n              <div className=\"accordion-body\">\n                <p>\n                  Based on the <b>URL/API</b> you want to query, Choose the type from <Link to=\"/wiki/json\">JSON</Link>, <Link to=\"/wiki/csv\">CSV</Link>, <Link to=\"/wiki/xml\">XML</Link>,{' '}\n                  <Link to=\"/wiki/graphql\">GraphQL</Link> or <Link to=\"/wiki/html\">HTML</Link> and then enter your URL.\n                </p>\n                <p>\n                  You can also choose <b>Inline</b> option, In case if you are performing adhoc/static analysis over inline data.\n                </p>\n                <div className=\"mt-2\">More details about the queries can be found in the individual sections of the APIs.</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n"],"names":["GettingStarted","React","Layout","title","className","id","type","href","target","rel","Link","to"],"sourceRoot":""}