{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-tsx","path":"/wiki/provisioning/","result":{"data":{"site":{"siteMetadata":{"title":"Grafana Infinity Datasource","description":"Do infinite things with Grafana. Turn any website into beautiful grafana dashboards. Supports HTML, CSV, JSON, XML & GraphQL documents.","socialImage":"https://user-images.githubusercontent.com/153843/92741922-03491380-f377-11ea-9c31-9a744afd3388.png","website":"https://yesoreyeram.github.io/grafana-infinity-datasource"}},"markdownRemark":{"html":"<p>If you want to <a href=\"https://grafana.com/docs/grafana/latest/administration/provisioning/#provisioning-grafana\">provision</a> your datasources via grafana provisioning feature, use the following settings</p>\n<h3>Basic Provisioning</h3>\n<p>If you need to provision via file, use the following settings for the basic use cases.</p>\n<deckgo-highlight-code language=\"yaml\" terminal=\"carbon\" theme=\"vscode\"  >\n          <code slot=\"code\">- name: &lt;&lt;YOUR DATASOURCE INSTANCE NAME&gt;&gt;\n  type: yesoreyeram-infinity-datasource</code>\n        </deckgo-highlight-code>\n<h3>Advanced Provisioning</h3>\n<p>If you need an advanced version of the datasource, use the following format.</p>\n<deckgo-highlight-code language=\"yaml\" terminal=\"carbon\" theme=\"vscode\"  >\n          <code slot=\"code\">- name: &lt;&lt;YOUR DATASOURCE INSTANCE NAME. Example -- Github&gt;&gt;\n  type: yesoreyeram-infinity-datasource\n  basicAuth: true\n  basicAuthUser: &lt;&lt;YOUR USER NAME. Example -- github_id&gt;&gt;\n  jsonData:\n    auth_method: &#39;basicAuth&#39;\n    allowedHosts:\n      - &#39;https://foo.com/bar&#39;\n      - &#39;https://example.com&#39;\n    oauthPassThru: &lt;&lt;true or false&gt;&gt; -- false by default. Set to true if you want to pass the auth token from grafana\n    tlsSkipVerify: &lt;&lt;true or false&gt;&gt; -- false by default\n    tlsAuth: &lt;&lt;true or false&gt;&gt; -- false by default\n    tlsAuthWithCACert: &lt;&lt;true or false&gt;&gt; -- false by default\n    serverName: &lt;&lt;server name that matches in certificate for tlsAuthWithCACert&gt;&gt;\n    timeoutInSeconds: &lt;&lt;60&gt;&gt; -- or whatever the timeout you want set. If not set defaults to 60.\n  secureJsonData:\n    basicAuthPassword: &lt;&lt;YOUR PASSWORD. Example -- MY_Github_PAT_Token&gt;&gt;\n    tlsCACert: &lt;&lt;Your TLS cert&gt;&gt;\n    tlsClientCert: &lt;&lt;Your client certificate&gt;&gt;\n    tlsClientKey: &lt;&lt;Your client key&gt;&gt;</code>\n        </deckgo-highlight-code>\n<p>For more advanced configuration, refer <strong>Generate provisioning yaml file</strong> section of this document.</p>\n<h3>Custom headers</h3>\n<p>If you want to provision custom header, you can use the following syntax</p>\n<deckgo-highlight-code language=\"yaml\" terminal=\"carbon\" theme=\"vscode\"  >\n          <code slot=\"code\">jsonData:\n  httpHeaderName1: &lt;&lt;Header1 Key&gt;&gt;\n  httpHeaderName2: &lt;&lt;Header2 Key&gt;&gt;\n  httpHeaderName3: X-API-Token\n  httpHeaderName4: &lt;&lt;Header4 Key&gt;&gt;\nsecureJsonData:\n  httpHeaderValue1: &lt;&lt;Header1 Value&gt;&gt;\n  httpHeaderValue2: &lt;&lt;Header2 Value&gt;&gt;\n  httpHeaderValue2: xxxx-1234-xxxx-yyyy-1234\n  httpHeaderValue4: &lt;&lt;Header4 Value&gt;&gt;</code>\n        </deckgo-highlight-code>\n<h2>More examples</h2>\n<p>For more examples of provisioning such as <code>oauth2</code>, etc, use provisioning section of the infinity datasource config. You will be able to generate provisioning file by manually configuring the datasource.</p>\n<h2>Generate provisioning yaml file</h2>\n<p>Once can manually configure the datasource and verified it is working, you can generate the provisioning yaml file from the datasource config page itself. Look for <code>Provisioning Script</code> button at the bottom of the config page inside <strong>more</strong> section.</p>","frontmatter":{"slug":"/wiki/provisioning","title":"Provisioning","previous_page_title":"Configuration","previous_page_slug":"/wiki/configuration","next_page_title":"URL","next_page_slug":"/wiki/url"}}},"pageContext":{"id":"98fa4d67-3824-5372-ae97-508957dd9433","frontmatter__slug":"/wiki/provisioning","__params":{"frontmatter__slug":"wiki"}}},"staticQueryHashes":["561970757"]}