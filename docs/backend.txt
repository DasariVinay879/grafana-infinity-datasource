1:HL["/grafana-infinity-datasource/_next/static/media/2aaf0723e720e8b9-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/grafana-infinity-datasource/_next/static/css/44d82ce54d417f02.css",{"as":"style"}]
0:["wvpveeMszvc7NLhICW1KQ",[[["",{"children":["docs",{"children":[["slug","backend","c"],{"children":["__PAGE__?{\"slug\":[\"backend\"]}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/grafana-infinity-datasource/_next/static/css/44d82ce54d417f02.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":4190,"chunks":["310:static/chunks/0e5ce63c-ef4c11e95cfe58be.js","965:static/chunks/965-cf0e86a1e510ae64.js","685:static/chunks/685-e9c2b3902548b227.js","565:static/chunks/565-d732410677cee51d.js","185:static/chunks/app/layout-270952261db5b1f9.js"],"name":"","async":false}
6:I{"id":7767,"chunks":["272:static/chunks/webpack-e1be409c555a3ff9.js","971:static/chunks/fd9d1056-7fa96bc4412ca339.js","596:static/chunks/596-582349f5b7d1459d.js"],"name":"default","async":false}
7:I{"id":7920,"chunks":["272:static/chunks/webpack-e1be409c555a3ff9.js","971:static/chunks/fd9d1056-7fa96bc4412ca339.js","596:static/chunks/596-582349f5b7d1459d.js"],"name":"default","async":false}
3:[null,["$","$L5",null,{"children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":["$","div",null,{"className":"text-center m-auto ml-[30%] my-[25%]","children":"Sorry..! Page not found."}],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children",["slug","backend","c"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8","$L9",null],"segment":"__PAGE__?{\"slug\":[\"backend\"]}"},"styles":[]}],"segment":["slug","backend","c"]},"styles":[]}],"segment":"docs"},"styles":[]}],"params":{}}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Backend Parser"}],["$","meta","2",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link","3",{"rel":"icon","href":"/grafana-infinity-datasource/favicon.ico","type":"image/x-icon","sizes":"32x32"}],["$","meta","4",{"name":"next-size-adjust"}]]
9:["$","article",null,{"className":"py-1 prose dark:prose-invert","children":["$undefined",["$","header",null,{"children":[["$","h1",null,{"className":"mb-2 font-extrabold text-2xl","children":"Backend Parser"}],"$undefined",["$","p",null,{"className":"space-x-1 text-xs text-gray-500"}]]}],["$","hr",null,{"className":"my-6"}],["$","div",null,{"className":"markdown-content","children":[["$","p",null,{"children":["Backend parser for infinity is introduced in version 1.0.0. Setting the parser to backend in your query editor will allow you to use features such as ",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"alerting"}],", ",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"grafana expressions"}]," ,",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"recorded queries"}],", ",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"enterprise query caching"}]," and ",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"public dashboards"}],"."]}],"\n",["$","p",null,{"children":"Support for backend parser is available for JSON from version 1.0.0.\nSupport for backend parser is available for CSV/TSV/GraphQL from version 1.1.0.\nSupport for backend parser is available for XML/HTML from version 1.2.0."}],"\n",["$","h2",null,{"id":"root-selector--field-selector","className":"pb-2 font-bold","children":[[["$","a",null,{"className":"anchor","href":"#root-selector--field-selector","children":["$","span",null,{"className":"icon icon-link"}]}],"Root selector / Field selector"],["$","a",null,{"href":"#root-selector--field-selector","className":"anchor-link ml-2 text-orange-500","children":"#"}]]}],"\n",["$","p",null,{"children":["For JSON, Data received from the server should be in array format. If not, then the array must be specified by the root selector. Root selector have to be in the format specified by ",["$","a",null,{"href":"https://github.com/tidwall/gjson#path-syntax","children":"gjson"}],"."]}],"\n",["$","blockquote",null,{"className":"mt-6 border-l-2 pl-6 italic","children":["\n",["$","p",null,{"children":"Backend parser uses gjson style selectors and legacy/default/frontend parser uses lodash type selectors."}],"\n"]}],"\n",["$","h2",null,{"id":"computed-fields","className":"pb-2 font-bold","children":[[["$","a",null,{"className":"anchor","href":"#computed-fields","children":["$","span",null,{"className":"icon icon-link"}]}],"Computed fields"],["$","a",null,{"href":"#computed-fields","className":"anchor-link ml-2 text-orange-500","children":"#"}]]}],"\n",["$","p",null,{"children":["Once you have some fields already and you want to compute new field based on existing columns, you can use computed fields to do. This is something similar to grafana's ",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"Add field from calculation -> Binary Operation"}]," but enhanced with powerful expression language. For example ",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"price * qty"}]," gives the multiplication value of two columns names ",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"price"}]," and ",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"qty"}]]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"https://user-images.githubusercontent.com/153843/196197153-306bbf2a-bc95-4be2-b3ad-75e12c8ea404.png#center","alt":"calculated fields"}]}],"\n",["$","h2",null,{"id":"filter","className":"pb-2 font-bold","children":[[["$","a",null,{"className":"anchor","href":"#filter","children":["$","span",null,{"className":"icon icon-link"}]}],"Filter"],["$","a",null,{"href":"#filter","className":"anchor-link ml-2 text-orange-500","children":"#"}]]}],"\n",["$","p",null,{"children":["If you want to filter data, you can use filter expression. The expression should yield ",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"true"}]," or ",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"false"}],". Example: ",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"price > 500"}],", ",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"name != 'MacBook' && price != null"}],", ",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"name IN ('MacBook','MacBook Air')"}]," and ",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"!(name IN ('MacBook','MacBook Air'))"}]," are valid filter expressions."]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"https://user-images.githubusercontent.com/153843/196344664-33733b04-3ac9-4c00-9c3c-970a9cb63bb3.png#center","alt":"Filter expression"}]}],"\n",["$","h2",null,{"id":"summarize","className":"pb-2 font-bold","children":[[["$","a",null,{"className":"anchor","href":"#summarize","children":["$","span",null,{"className":"icon icon-link"}]}],"Summarize"],["$","a",null,{"href":"#summarize","className":"anchor-link ml-2 text-orange-500","children":"#"}]]}],"\n",["$","p",null,{"children":["Backend parser also supports summarizing the fields into a metric. For example, ",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"count(something)"}]," or ",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"max(some-other-thing)"}]," or ",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"mean([some other thing])"}]," can be calculated from the array of data. You can also use numeric options such as ",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"sum"}],",",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"min"}],",",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"max"}],",",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"mean"}],",",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"first"}]," and ",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"last"}],". You can also use expressions like ",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"sum(price) / count(id)"}],"."]}],"\n",["$","p",null,{"children":["When specifying the field name, all special characters must be replaced with ",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"-"}]," and also transformed to lower case. Or the field name can also be specified within square brackets if they contain special characters. For example if the field name is ",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"Something Else!"}],", then that can be specified like ",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"min(something-else-)"}]," or ",["$","code",null,{"className":"relative rounded px-[0.3rem] py-[0.2rem] font-mono text-sm","children":"min([Something Else!])"}],"."]}]]}]]}]
8:null
